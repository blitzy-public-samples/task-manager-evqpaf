# Kubernetes version: 1.26+
# Purpose: Defines Kubernetes Secrets for storing sensitive data securely
#
# Requirements addressed:
# 1. Technical Specification/System Architecture/2.5 Security Architecture
#    - Secure Data Storage: Implements secure storage of sensitive data using Kubernetes Secrets
#    - TLS Termination: Provides TLS certificates for HTTPS communication
#
# Human Tasks Required:
# 1. Replace the base64-encoded values with actual production credentials:
#    - DB_PASSWORD: Database password
#    - JWT_SECRET: Secret key for JWT token signing
#    - TLS_CERT: TLS certificate for HTTPS
#    - TLS_KEY: TLS private key
# 2. Ensure proper RBAC permissions are configured for accessing these secrets
# 3. Implement proper key rotation mechanisms
# 4. Configure proper backup and disaster recovery for secrets

apiVersion: v1
kind: Secret
metadata:
  name: task-management-secrets
  namespace: task-management-system
  labels:
    app: task-management
  annotations:
    description: "Contains sensitive credentials and certificates for Task Management System"
    last-rotation: "2023-01-01"  # Update this when rotating secrets
    managed-by: "platform-team"
    encryption: "aes-256-gcm"    # Indicates encryption method used by Kubernetes
type: Opaque
data:
  # Database credentials
  # Base64 encoded value of a secure password
  DB_PASSWORD: c2VjdXJlX3Bhc3N3b3Jk

  # JWT signing secret
  # Base64 encoded value of a secure random string
  JWT_SECRET: c2VjdXJlX2p3dF9zZWNyZXQ=

  # TLS certificate for HTTPS termination
  # Base64 encoded PEM format certificate
  TLS_CERT: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCg==

  # TLS private key
  # Base64 encoded PEM format private key
  TLS_KEY: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQo=