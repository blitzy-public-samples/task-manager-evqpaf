# Kubernetes version: 1.26+
# Purpose: Defines the Horizontal Pod Autoscaler (HPA) for the User Service
#
# Requirements addressed:
# 1. Dynamic Scaling (Technical Specification/System Architecture/2.2 Component Details)
#    - Ensures the User Service can scale dynamically based on CPU and memory usage
#    - Automatically adjusts replica count between 2 and 10 based on resource utilization
#
# 2. Resource Optimization (Technical Specification/System Architecture/2.3.2 Communication Patterns)
#    - Optimizes resource usage by scaling pods up/down based on real-time metrics
#    - Targets 70% CPU and 75% memory utilization for optimal resource efficiency
#
# Human Tasks:
# 1. Verify that metrics-server is installed and running in the cluster
# 2. Monitor HPA behavior during initial deployment to adjust thresholds if needed
# 3. Set up alerts for when scaling hits max replicas consistently
# 4. Configure proper monitoring and dashboards for autoscaling metrics

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: user-service-hpa
  namespace: task-management-system
  labels:
    app: task-management
    component: user-service
  annotations:
    description: "Horizontal Pod Autoscaler for User Service"
    maintainer: "platform-team"

spec:
  # Reference to the User Service deployment
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: user-service

  # Scaling limits
  minReplicas: 2
  maxReplicas: 10

  # Scaling metrics
  metrics:
    # CPU-based scaling
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70

    # Memory-based scaling
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 75

  # Behavior configuration for scaling
  behavior:
    scaleUp:
      # Quick scale up to handle traffic spikes
      stabilizationWindowSeconds: 60
      policies:
      - type: Pods
        value: 2
        periodSeconds: 60
      - type: Percent
        value: 100
        periodSeconds: 60
      selectPolicy: Max

    scaleDown:
      # Gradual scale down to prevent service disruption
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 1
        periodSeconds: 120
      - type: Percent
        value: 20
        periodSeconds: 120
      selectPolicy: Min