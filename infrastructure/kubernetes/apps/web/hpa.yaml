# Kubernetes version: 1.26+
#
# Purpose: Defines the Horizontal Pod Autoscaler (HPA) for the web application
#
# Requirements addressed:
# 1. Dynamic Scaling (Technical Specification/System Architecture/2.2 Component Details)
#    - Ensures the web application scales dynamically based on resource usage to handle varying traffic loads
# 2. Resource Optimization (Technical Specification/System Architecture/2.3.2 Communication Patterns)
#    - Optimizes resource utilization by scaling pods up or down based on CPU and memory usage
#
# Human Tasks:
# 1. Verify that metrics-server is installed and functioning in the cluster
# 2. Ensure Prometheus is properly configured to collect metrics from web pods
# 3. Review and adjust scaling thresholds based on production workload patterns
# 4. Monitor scaling behavior and adjust min/max replicas if needed

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: web-hpa
  namespace: task-management-system
  labels:
    app: task-management
    component: web
  annotations:
    description: "Horizontal Pod Autoscaler for the web application"
    kubernetes.io/last-applied-configuration: "Managed by Kubernetes"
spec:
  # Reference to the web deployment that will be scaled
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: web-deployment

  # Scaling limits
  minReplicas: 2
  maxReplicas: 10

  # Metrics used for scaling decisions
  metrics:
    # CPU utilization target
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70

    # Memory utilization target
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

  # Behavior configuration for scaling
  behavior:
    scaleUp:
      # Quick scale up to handle traffic spikes
      stabilizationWindowSeconds: 60
      policies:
      - type: Pods
        value: 2
        periodSeconds: 60
      - type: Percent
        value: 100
        periodSeconds: 60
      selectPolicy: Max

    scaleDown:
      # Gradual scale down to prevent service disruption
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 1
        periodSeconds: 120
      - type: Percent
        value: 20
        periodSeconds: 120
      selectPolicy: Min