# Kubernetes version: 1.26+
# Purpose: Defines the Horizontal Pod Autoscaler for the API Gateway
#
# Requirement Addressed: Dynamic Scaling for API Gateway
# Location: Technical Specification/System Design/Deployment Architecture
# Description: Ensures the API Gateway can scale dynamically based on CPU and memory usage
# to handle varying loads efficiently.
#
# Human Tasks:
# 1. Verify that resource requests and limits are properly configured in the API Gateway deployment
# 2. Monitor scaling behavior and adjust thresholds based on production workload patterns
# 3. Configure alerts for scaling events and resource utilization thresholds
# 4. Review and adjust min/max replicas based on actual traffic patterns

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-gateway-hpa
  namespace: task-management-system
  labels:
    app: api-gateway
    tier: backend
  annotations:
    description: "Horizontal Pod Autoscaler for API Gateway"
    monitoring.kubernetes.io/enable: "true"
spec:
  # Reference to the API Gateway deployment
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway

  # Scaling limits
  minReplicas: 2  # Minimum number of replicas for high availability
  maxReplicas: 10 # Maximum number of replicas to prevent resource exhaustion

  # Metrics used for scaling decisions
  metrics:
    # CPU utilization target
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70  # Scale when CPU usage reaches 70%

    # Memory utilization target
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 75  # Scale when memory usage reaches 75%

  # Behavior configuration for scaling
  behavior:
    scaleUp:
      # How quickly to scale up
      stabilizationWindowSeconds: 60  # Wait 1 minute before scaling up again
      policies:
      - type: Pods
        value: 2                      # Add up to 2 pods at a time
        periodSeconds: 60
      - type: Percent
        value: 100                    # Or double the number of pods
        periodSeconds: 60
      selectPolicy: Max               # Use the policy that would scale up more

    scaleDown:
      # More conservative scale down behavior
      stabilizationWindowSeconds: 300  # Wait 5 minutes before scaling down
      policies:
      - type: Pods
        value: 1                       # Remove only 1 pod at a time
        periodSeconds: 60
      - type: Percent
        value: 10                      # Or remove 10% of pods
        periodSeconds: 60
      selectPolicy: Min                # Use the policy that would scale down less