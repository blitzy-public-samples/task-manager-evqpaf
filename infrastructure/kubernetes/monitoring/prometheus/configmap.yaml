# Kubernetes version: 1.26+
#
# Purpose: Defines the Prometheus configuration for monitoring the Task Management System
#
# Requirements addressed:
# - Technical Specification/System Architecture/2.4 Cross-Cutting Concerns
#   Implements system monitoring and alerting using Prometheus for performance and health monitoring
#
# Human Tasks Required:
# 1. Review and adjust scrape intervals based on production monitoring requirements
# 2. Add additional job configurations for service-specific metrics endpoints
# 3. Configure authentication if metrics endpoints are secured
# 4. Verify network connectivity between Prometheus and target services
# 5. Set up alerting rules once baseline metrics are established

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config-local
  namespace: task-management-system  # References namespace from namespace.yaml
  labels:
    app: prometheus
    component: monitoring
  annotations:
    description: "Prometheus monitoring configuration for Task Management System"
    configmap.reloader.stakater.com/reload: "true"  # Enables automatic config reload
data:
  prometheus.yml: |
    # Global configuration
    global:
      scrape_interval: 15s      # Default scrape interval for all jobs
      evaluation_interval: 15s   # Interval for evaluating rules
      scrape_timeout: 10s       # Timeout for scrape requests

      # Labels added to all time series and alerts
      external_labels:
        environment: production
        cluster: task-management-system

    # Rule files specifying alert conditions
    rule_files:
      - /etc/prometheus/rules/*.yml

    # Scrape configurations
    scrape_configs:
      # Self-monitoring of Prometheus
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
        metrics_path: /metrics
        scheme: http

      # Kubernetes API server monitoring
      - job_name: 'kubernetes-apiserver'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # Kubernetes nodes monitoring
      - job_name: 'kubernetes-nodes'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics

      # Task Management System services monitoring
      - job_name: 'task-management-services'
        kubernetes_sd_configs:
          - role: service
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace]
            action: keep
            regex: task-management-system
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_service_name

      # Kubernetes cadvisor monitoring
      - job_name: 'kubernetes-cadvisor'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

    # Alert manager configuration
    alerting:
      alertmanagers:
        - kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels: [__meta_kubernetes_namespace]
              regex: task-management-system
              action: keep
            - source_labels: [__meta_kubernetes_pod_label_app]
              regex: alertmanager
              action: keep
            - source_labels: [__meta_kubernetes_pod_container_port_number]
              regex: "9093"
              action: keep