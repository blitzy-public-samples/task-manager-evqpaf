# Kubernetes version: 1.26+
#
# Human Tasks Required:
# 1. Ensure Elasticsearch image version (8.0.0) is compatible with your environment
# 2. Verify the storage size (10Gi) is sufficient for your workload
# 3. Configure proper node affinity rules if specific node placement is required
# 4. Review and adjust Java heap size settings based on available resources
# 5. Configure proper backup mechanisms for Elasticsearch data
#
# Requirements addressed:
# 1. Technical Specification/System Architecture/2.4 Cross-Cutting Concerns - System Monitoring
#    - Implements scalable Elasticsearch deployment for log aggregation and search
# 2. Technical Specification/System Architecture/2.2 Component Details - Data Persistence
#    - Ensures persistent storage for Elasticsearch using StatefulSets and StorageClass

---
# StatefulSet for Elasticsearch cluster
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: task-management-system
  labels:
    app: elasticsearch
    component: monitoring
  annotations:
    description: "Elasticsearch cluster for log aggregation and search capabilities"
spec:
  serviceName: elasticsearch
  replicas: 3
  selector:
    matchLabels:
      app: elasticsearch
      component: monitoring
  template:
    metadata:
      labels:
        app: elasticsearch
        component: monitoring
    spec:
      initContainers:
        - name: fix-permissions
          image: busybox:1.35.0
          command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
        - name: increase-vm-max-map
          image: busybox:1.35.0
          command: ["sysctl", "-w", "vm.max_map_count=262144"]
          securityContext:
            privileged: true
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:8.0.0
          resources:
            requests:
              cpu: "1"
              memory: "2Gi"
            limits:
              cpu: "2"
              memory: "4Gi"
          ports:
            - name: http
              containerPort: 9200
              protocol: TCP
            - name: transport
              containerPort: 9300
              protocol: TCP
          envFrom:
            - configMapRef:
                name: task-management-config
            - secretRef:
                name: task-management-secrets
          env:
            - name: cluster.name
              value: "task-management-es"
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: discovery.seed_hosts
              value: "elasticsearch-0.elasticsearch,elasticsearch-1.elasticsearch,elasticsearch-2.elasticsearch"
            - name: cluster.initial_master_nodes
              value: "elasticsearch-0,elasticsearch-1,elasticsearch-2"
            - name: ES_JAVA_OPTS
              value: "-Xms2g -Xmx2g"
            - name: xpack.security.enabled
              value: "true"
            - name: xpack.monitoring.collection.enabled
              value: "true"
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
          readinessProbe:
            httpGet:
              path: /_cluster/health
              port: http
            initialDelaySeconds: 20
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /_cluster/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
      securityContext:
        fsGroup: 1000
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: elasticsearch-pvc
  volumeClaimTemplates:
    - metadata:
        name: elasticsearch-pvc
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: task-management-storage-class
        resources:
          requests:
            storage: 10Gi

---
# Headless Service for Elasticsearch
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: task-management-system
  labels:
    app: elasticsearch
    component: monitoring
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: http
      port: 9200
      targetPort: 9200
      protocol: TCP
    - name: transport
      port: 9300
      targetPort: 9300
      protocol: TCP
  selector:
    app: elasticsearch
    component: monitoring