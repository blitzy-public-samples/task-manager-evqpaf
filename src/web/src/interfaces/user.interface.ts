/**
 * User Interface Definition
 * 
 * Requirements Addressed:
 * - User Data Management (Technical Specification/3.2 Database Design/3.2.1 Schema Design)
 *   Defines the structure for user-related data to ensure consistency and type safety 
 *   across the application.
 * 
 * Human Tasks:
 * - Ensure role values are synchronized with backend authorization system
 * - Validate that all required user fields are properly enforced in forms and API requests
 */

import { BASE_API_URL } from '../constants/api.constants';

/**
 * Interface defining the structure of user data throughout the application.
 * This interface is used for:
 * - Type checking user objects
 * - API request/response typing
 * - Form validation
 * - User state management
 */
export interface UserInterface {
  /**
   * Unique identifier for the user
   * Typically a UUID generated by the backend
   */
  id: string;

  /**
   * User's email address
   * Used for authentication and communication
   */
  email: string;

  /**
   * User's first name
   * Used for display and personalization
   */
  firstName: string;

  /**
   * User's last name
   * Used for display and personalization
   */
  lastName: string;

  /**
   * User's role in the system
   * Controls access permissions and available features
   * Expected values: 'admin', 'user', 'manager'
   */
  role: string;
}